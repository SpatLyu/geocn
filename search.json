[{"path":"https://stscl.github.io/geocn/articles/geocn.html","id":"available-data-sets","dir":"Articles","previous_headings":"","what":"Available data sets","title":"Loads Spatial Data Sets Related to China","text":"geocn package covers 19 spatial data sets, including variety relevant data global Chinese regions. can view data sets available using list_geocn() function.","code":"library(sf) ## Linking to GEOS 3.10.2, GDAL 3.4.1, PROJ 8.2.1; sf_use_s2() is TRUE library(geocn) library(ggplot2)  datasets_geocn = list_geocn() datasets_geocn ## # A tibble: 19 × 2 ##    functions               results                                               ##    <chr>                   <chr>                                                 ##  1 load_world_country      Global Country Boundaries                             ##  2 load_world_continent    Global Continents                                     ##  3 load_world_coastline    Global Coastlines                                     ##  4 load_world_ocean        Global Oceans                                         ##  5 load_world_lake         Global Lakes                                          ##  6 load_world_river        Global Rivers                                         ##  7 load_cn_province        Province-Level Administrative Units in China          ##  8 load_cn_city            City-Level Administrative Units in China              ##  9 load_cn_county          County-Level Administrative Units in China            ## 10 load_cn_border          China's Land Border Line and the 10-dash line of the… ## 11 load_cn_landborder      China's Land Border                                   ## 12 load_cn_coastline       Coastline of China                                    ## 13 load_cn_tenline         10-dash line of the South China Sea                   ## 14 load_cn_landcoast       China's Land Border and Coastline                     ## 15 load_tibetan_plateau    Tibetan Plateau Boundary                              ## 16 load_loess_plateau      Loess Plateau Boundary                                ## 17 load_yangtze_basin      Yangtze River Basin Boundary                          ## 18 load_yellow_river_basin Yellow River Basin Boundary                           ## 19 load_weihe_basin        Weihe River Basin Boundary"},{"path":"https://stscl.github.io/geocn/articles/geocn.html","id":"commonly-used-crs-for-drawing-maps-of-china","dir":"Articles","previous_headings":"","what":"Commonly Used CRS for Drawing Maps of China","title":"Loads Spatial Data Sets Related to China","text":"load_cn_alberproj() function can used obtain CRS information available sf terra packages. default, returns sf format. However, can specify return format output parameter.","code":"albers = load_cn_alberproj()  province = load_cn_province() ## Warning in CPL_read_ogr(dsn, layer, query, as.character(options), quiet, : GDAL ## Message 1: organizePolygons() received a polygon with more than 100 parts.  The ## processing may be really slow.  You can skip the processing by setting ## METHOD=SKIP. ggplot(data = province) +   geom_sf(fill = 'grey90', color = 'grey') +   theme_bw() province_albers = st_transform(province,albers) ggplot(data = province_albers) +   geom_sf(fill = 'grey90', color = 'grey') +   theme_bw()"},{"path":"https://stscl.github.io/geocn/articles/geocn.html","id":"region-specific-crs-transformation-in-china","dir":"Articles","previous_headings":"","what":"Region-specific CRS Transformation in China","title":"Loads Spatial Data Sets Related to China","text":"section primarily focuses conversion GCJ02, BD09, WGS84 coordinate systems. geocn provides st_transform_cn() function achieve conversion. need input longitude latitude coordinate vectors transformed function parameters lon lat, specify CRS transformation CRS transformed. Please note st_transform_cn() function, parameters respectively refer wgs, gcj, bd WGS84, GCJ02, BD09 coordinate systems. Default Conversion GCJ02 WGS84.","code":"lon = c(126.626510,126.625261,126.626378,126.626541,126.626721,126.627732,126.626510) lat = c(45.731596,45.729834,45.729435,45.729676,45.729604,45.730915,45.731596) st_transform_cn(lon,lat) ## # A tibble: 7 × 2 ##     lon   lat ##   <dbl> <dbl> ## 1  127.  45.7 ## 2  127.  45.7 ## 3  127.  45.7 ## 4  127.  45.7 ## 5  127.  45.7 ## 6  127.  45.7 ## 7  127.  45.7"},{"path":"https://stscl.github.io/geocn/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Wenbo Lv. Author, maintainer.","code":""},{"path":"https://stscl.github.io/geocn/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Lv W (2024). geocn: Loads Spatial Data Sets China. R package version 0.1.0, https://github.com/stscl/geocn, https://stscl.github.io/geocn/.","code":"@Manual{,   title = {geocn: Loads Spatial Data Sets of China},   author = {Wenbo Lv},   year = {2024},   note = {R package version 0.1.0, https://github.com/stscl/geocn},   url = {https://stscl.github.io/geocn/}, }"},{"path":"https://stscl.github.io/geocn/index.html","id":"geocn-","dir":"","previous_headings":"","what":"geocn | Loads Spatial Data Sets of China\n","title":"geocn | Loads Spatial Data Sets of China\n","text":"goal geocn provide various commonly used spatial data related Chinese regions R programming environment.","code":""},{"path":"https://stscl.github.io/geocn/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"geocn | Loads Spatial Data Sets of China\n","text":"Install development binary version r-universe : Install development source version GitHub :","code":"install.packages(\"geocn\",                   repos = c(\"https://stscl.r-universe.dev\",                            \"https://cloud.r-project.org\"),                  dep = TRUE) # install.packages(\"devtools\") devtools::install_github(\"stscl/geocn\",                          build_vignettes = TRUE,                          dep = TRUE)"},{"path":[]},{"path":"https://stscl.github.io/geocn/index.html","id":"drawing-a-map-of-china-using-ggplot2","dir":"","previous_headings":"Example","what":"Drawing a Map of China Using ggplot2","title":"geocn | Loads Spatial Data Sets of China\n","text":"","code":"library(sf) library(ggplot2) library(cowplot) library(geocn)  albers = load_cn_alberproj() province = load_cn_province() tenline = load_cn_tenline() ocean = load_world_ocean() lakes = load_world_lake() coastline = load_world_coastline()  ggplot() +   geom_sf(data = ocean,fill=\"#BEE8FF\",color=\"white\",size=.1) +   geom_sf(data = coastline,color=\"#252525\",size=.5) +   geom_sf(data = province,fill=\"white\",size=.1,color=\"grey\") +    geom_sf(data = lakes,fill=\"#BEE8FF\",color=\"white\",size=.1) +   geom_sf(data = tenline,size=.2,color=\"#9d98b7\") +   ggfx::with_shadow(geom_sf(data = tenline,size=.2,color=\"#9d98b7\") ,                      sigma = 3,x_offset = -5,y_offset = -2) -> fig1  fig1 +   coord_sf(crs = albers,            ylim = c(1500000,6000000),            xlim = c(-3100000,2000000),            expand = FALSE) +   theme_bw() +   theme(plot.background = element_rect(\"grey97\", fill = NA),         axis.text = element_blank(),         axis.ticks = element_blank(),         axis.title = element_blank()) -> china.main  fig1 +    coord_sf(crs = albers,            ylim = c(273000,2800000),            xlim = c(-350000,1350000)) +   theme_minimal() +   theme(     axis.text = element_blank(),     axis.ticks = element_blank(),     axis.title = element_blank(),     panel.grid = element_blank(),     panel.background = element_rect(\"#BEE8FF\", color = NA),     panel.border = element_rect(fill=NA,                                 linetype = 1,                                 linewidth = 0.5),     plot.margin=unit(c(0,0,0,0),\"cm\")) -> china.ocean  ggdraw() +   draw_plot(china.main) +   draw_plot(china.ocean,x = .815, y = .015,             width = .13, height = .20) -> cnmap1 cnmap1"},{"path":"https://stscl.github.io/geocn/index.html","id":"drawing-a-map-of-china-using-tmap","dir":"","previous_headings":"Example","what":"Drawing a Map of China Using tmap","title":"geocn | Loads Spatial Data Sets of China\n","text":"","code":"library(sf) library(tmap) library(cowplot) library(geocn)  albers = load_cn_alberproj() cn_border = load_cn_border() main_border = load_cn_landcoast() tenline = load_cn_tenline() province = load_cn_province()  tm_shape(main_border,          projection = albers) +   tm_lines(col = NA,lwd = 0.01) +   tm_shape(province) +   tm_fill(col = 'white',alpha = .5) +   tm_borders(col = 'grey40', lwd = 1.25) +   tm_shape(cn_border) +   tm_lines(col='#9d98b7',lwd = 2.5) +   tm_scale_bar(position = c(0.05,0.01),                width = 0.15,text.size = 1.05,                lwd = 2) +   tm_compass(position = c(0.05,0.9),              just = 'center',size = 1.5,              text.size = .65,show.labels = 1) +   tm_layout(legend.width = 0.75,             legend.text.size = 1,             legend.height = 1.75,             legend.position = c(0.045,0.075),             compass.type = \"arrow\",             fontfamily = \"serif\") -> cn_mainplot  tm_shape(tenline,          projection = albers) +   tm_lines(col=NA,lwd=0.01) +   tm_shape(province) +   tm_fill(col = 'white',alpha = .5) +   tm_borders(col = 'grey40', lwd = 1.25) +   tm_shape(cn_border) +   tm_lines(col='#9d98b7',lwd = 2.5) -> cn_miniplot  ggdraw() +   draw_plot(tmap_grob(cn_mainplot)) +   draw_plot(tmap_grob(cn_miniplot),             halign = 0.5,valign = 0.5,             height = 0.2,             x = 0.427,             y = 0.019) -> cnmap2 cnmap2"},{"path":"https://stscl.github.io/geocn/reference/list_geocn.html","id":null,"dir":"Reference","previous_headings":"","what":"List all data sets available in the geocn package — list_geocn","title":"List all data sets available in the geocn package — list_geocn","text":"Returns tibble datasets available geocn package.","code":""},{"path":"https://stscl.github.io/geocn/reference/list_geocn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List all data sets available in the geocn package — list_geocn","text":"","code":"list_geocn()"},{"path":"https://stscl.github.io/geocn/reference/list_geocn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List all data sets available in the geocn package — list_geocn","text":"tibble","code":""},{"path":"https://stscl.github.io/geocn/reference/list_geocn.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"List all data sets available in the geocn package — list_geocn","text":"","code":"list_geocn() #> # A tibble: 19 × 2 #>    functions               results                                               #>    <chr>                   <chr>                                                 #>  1 load_world_country      Global Country Boundaries                             #>  2 load_world_continent    Global Continents                                     #>  3 load_world_coastline    Global Coastlines                                     #>  4 load_world_ocean        Global Oceans                                         #>  5 load_world_lake         Global Lakes                                          #>  6 load_world_river        Global Rivers                                         #>  7 load_cn_province        Province-Level Administrative Units in China          #>  8 load_cn_city            City-Level Administrative Units in China              #>  9 load_cn_county          County-Level Administrative Units in China            #> 10 load_cn_border          China's Land Border Line and the 10-dash line of the… #> 11 load_cn_landborder      China's Land Border                                   #> 12 load_cn_coastline       Coastline of China                                    #> 13 load_cn_tenline         10-dash line of the South China Sea                   #> 14 load_cn_landcoast       China's Land Border and Coastline                     #> 15 load_tibetan_plateau    Tibetan Plateau Boundary                              #> 16 load_loess_plateau      Loess Plateau Boundary                                #> 17 load_yangtze_basin      Yangtze River Basin Boundary                          #> 18 load_yellow_river_basin Yellow River Basin Boundary                           #> 19 load_weihe_basin        Weihe River Basin Boundary"},{"path":"https://stscl.github.io/geocn/reference/load_cn_alberproj.html","id":null,"dir":"Reference","previous_headings":"","what":"Loading the commonly used Albers Lambert projection in China region. — load_cn_alberproj","title":"Loading the commonly used Albers Lambert projection in China region. — load_cn_alberproj","text":"Loading commonly used Albers Lambert projection China region.","code":""},{"path":"https://stscl.github.io/geocn/reference/load_cn_alberproj.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Loading the commonly used Albers Lambert projection in China region. — load_cn_alberproj","text":"","code":"load_cn_alberproj(output = \"sf\")"},{"path":"https://stscl.github.io/geocn/reference/load_cn_alberproj.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Loading the commonly used Albers Lambert projection in China region. — load_cn_alberproj","text":"output (optional) Output format, must sf terra. Default sf.","code":""},{"path":"https://stscl.github.io/geocn/reference/load_cn_alberproj.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Loading the commonly used Albers Lambert projection in China region. — load_cn_alberproj","text":"Available Projection CRS.","code":""},{"path":"https://stscl.github.io/geocn/reference/load_cn_alberproj.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Loading the commonly used Albers Lambert projection in China region. — load_cn_alberproj","text":"","code":"load_cn_alberproj() #> Coordinate Reference System: #>   User input: +proj=aea +lat_1=25 +lat_2=47 +lat_0=0 +lon_0=110 +x_0=0 +y_0=0 +datum=WGS84 +units=m +no_defs  #>   wkt: #> PROJCRS[\"unknown\", #>     BASEGEOGCRS[\"unknown\", #>         DATUM[\"World Geodetic System 1984\", #>             ELLIPSOID[\"WGS 84\",6378137,298.257223563, #>                 LENGTHUNIT[\"metre\",1]], #>             ID[\"EPSG\",6326]], #>         PRIMEM[\"Greenwich\",0, #>             ANGLEUNIT[\"degree\",0.0174532925199433], #>             ID[\"EPSG\",8901]]], #>     CONVERSION[\"unknown\", #>         METHOD[\"Albers Equal Area\", #>             ID[\"EPSG\",9822]], #>         PARAMETER[\"Latitude of false origin\",0, #>             ANGLEUNIT[\"degree\",0.0174532925199433], #>             ID[\"EPSG\",8821]], #>         PARAMETER[\"Longitude of false origin\",110, #>             ANGLEUNIT[\"degree\",0.0174532925199433], #>             ID[\"EPSG\",8822]], #>         PARAMETER[\"Latitude of 1st standard parallel\",25, #>             ANGLEUNIT[\"degree\",0.0174532925199433], #>             ID[\"EPSG\",8823]], #>         PARAMETER[\"Latitude of 2nd standard parallel\",47, #>             ANGLEUNIT[\"degree\",0.0174532925199433], #>             ID[\"EPSG\",8824]], #>         PARAMETER[\"Easting at false origin\",0, #>             LENGTHUNIT[\"metre\",1], #>             ID[\"EPSG\",8826]], #>         PARAMETER[\"Northing at false origin\",0, #>             LENGTHUNIT[\"metre\",1], #>             ID[\"EPSG\",8827]]], #>     CS[Cartesian,2], #>         AXIS[\"(E)\",east, #>             ORDER[1], #>             LENGTHUNIT[\"metre\",1, #>                 ID[\"EPSG\",9001]]], #>         AXIS[\"(N)\",north, #>             ORDER[2], #>             LENGTHUNIT[\"metre\",1, #>                 ID[\"EPSG\",9001]]]]"},{"path":"https://stscl.github.io/geocn/reference/load_cn_border.html","id":null,"dir":"Reference","previous_headings":"","what":"Loading China's Land Border Line and the 10-dash line of the South China Sea — load_cn_border","title":"Loading China's Land Border Line and the 10-dash line of the South China Sea — load_cn_border","text":"Loading China's Land Border Line 10-dash line South China Sea","code":""},{"path":"https://stscl.github.io/geocn/reference/load_cn_border.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Loading China's Land Border Line and the 10-dash line of the South China Sea — load_cn_border","text":"","code":"load_cn_border()"},{"path":"https://stscl.github.io/geocn/reference/load_cn_border.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Loading China's Land Border Line and the 10-dash line of the South China Sea — load_cn_border","text":"sf object","code":""},{"path":"https://stscl.github.io/geocn/reference/load_cn_border.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Loading China's Land Border Line and the 10-dash line of the South China Sea — load_cn_border","text":"","code":"cn_border = load_cn_border() cn_border #> Simple feature collection with 1 feature and 0 fields #> Geometry type: MULTILINESTRING #> Dimension:     XY #> Bounding box:  xmin: 73.53085 ymin: 3.40848 xmax: 134.981 ymax: 53.51356 #> Geodetic CRS:  WGS 84 #> # A tibble: 1 × 1 #>                                                                         geometry #>                                                            <MULTILINESTRING [°]> #> 1 ((110.3232 12.2405, 110.3159 11.96466, 110.2778 11.71434, 110.2279 11.55393, …"},{"path":"https://stscl.github.io/geocn/reference/load_cn_city.html","id":null,"dir":"Reference","previous_headings":"","what":"Loading Chinese City-Level Administrative Division Polygon Data — load_cn_city","title":"Loading Chinese City-Level Administrative Division Polygon Data — load_cn_city","text":"Loading Chinese City-Level Administrative Division Polygon Data","code":""},{"path":"https://stscl.github.io/geocn/reference/load_cn_city.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Loading Chinese City-Level Administrative Division Polygon Data — load_cn_city","text":"","code":"load_cn_city(simplify = TRUE, keep = 0.05, keep_shape = TRUE, ...)"},{"path":"https://stscl.github.io/geocn/reference/load_cn_city.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Loading Chinese City-Level Administrative Division Polygon Data — load_cn_city","text":"simplify (optional) Whether simplify loading sf objects (default TRUE) keep (optional) Proportion points retain (0-1; default 0.05) keep_shape (optional)    Prevent small polygon features disappearing high simplification (default TRUE) ... (optional) arguments passed rmapshaper::ms_simplify()","code":""},{"path":"https://stscl.github.io/geocn/reference/load_cn_city.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Loading Chinese City-Level Administrative Division Polygon Data — load_cn_city","text":"Whether simplify loading sf objects","code":""},{"path":"https://stscl.github.io/geocn/reference/load_cn_city.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Loading Chinese City-Level Administrative Division Polygon Data — load_cn_city","text":"","code":"library(sf) #> Linking to GEOS 3.10.2, GDAL 3.4.1, PROJ 8.2.1; sf_use_s2() is TRUE city = load_cn_city() #> Warning: GDAL Message 1: organizePolygons() received a polygon with more than 100 parts.  The processing may be really slow.  You can skip the processing by setting METHOD=SKIP. city #> Simple feature collection with 371 features and 6 fields #> Geometry type: MULTIPOLYGON #> Dimension:     XY #> Bounding box:  xmin: 73.50655 ymin: 3.83703 xmax: 135.0945 ymax: 53.56362 #> Geodetic CRS:  WGS 84 #> # A tibble: 371 × 7 #>    省     省代码 市类型 省类型 市     市代码                            geometry #>    <chr>   <dbl> <chr>  <chr>  <chr>   <dbl>                  <MULTIPOLYGON [°]> #>  1 安徽省 340000 地级市 省     安庆市 340800 (((117.1507 31.07444, 117.1304 31.… #>  2 安徽省 340000 地级市 省     蚌埠市 340300 (((117.9735 33.33581, 117.9467 33.… #>  3 安徽省 340000 地级市 省     亳州市 341600 (((116.3881 33.78433, 116.3432 33.… #>  4 安徽省 340000 地级市 省     池州市 341700 (((118.0955 30.64345, 118.0941 30.… #>  5 安徽省 340000 地级市 省     滁州市 341100 (((119.1795 32.82747, 119.1075 32.… #>  6 安徽省 340000 地级市 省     阜阳市 341200 (((116.3891 32.89303, 116.3654 32.… #>  7 安徽省 340000 地级市 省     合肥市 340100 (((117.1955 32.53608, 117.1521 32.… #>  8 安徽省 340000 地级市 省     淮北市 340600 (((116.9182 33.30882, 116.9242 33.… #>  9 安徽省 340000 地级市 省     淮南市 340400 (((117.1903 32.73662, 117.1503 32.… #> 10 安徽省 340000 地级市 省     黄山市 341000 (((118.864 30.10411, 118.8452 30.1… #> # ℹ 361 more rows"},{"path":"https://stscl.github.io/geocn/reference/load_cn_coastline.html","id":null,"dir":"Reference","previous_headings":"","what":"Loading Coastline of China — load_cn_coastline","title":"Loading Coastline of China — load_cn_coastline","text":"Loading Coastline China","code":""},{"path":"https://stscl.github.io/geocn/reference/load_cn_coastline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Loading Coastline of China — load_cn_coastline","text":"","code":"load_cn_coastline()"},{"path":"https://stscl.github.io/geocn/reference/load_cn_coastline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Loading Coastline of China — load_cn_coastline","text":"sf object","code":""},{"path":"https://stscl.github.io/geocn/reference/load_cn_coastline.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Loading Coastline of China — load_cn_coastline","text":"","code":"cn_coastline = load_cn_coastline() cn_coastline #> Simple feature collection with 1 feature and 0 fields #> Geometry type: MULTILINESTRING #> Dimension:     XY #> Bounding box:  xmin: 105.5271 ymin: 18.12558 xmax: 131.2247 ymax: 43.45281 #> Geodetic CRS:  WGS 84 #> # A tibble: 1 × 1 #>                                                                         geometry #>                                                            <MULTILINESTRING [°]> #> 1 ((114.6479 22.46397, 114.6478 22.46406, 114.6477 22.46414, 114.6477 22.46423,…"},{"path":"https://stscl.github.io/geocn/reference/load_cn_county.html","id":null,"dir":"Reference","previous_headings":"","what":"Loading Chinese County-Level Administrative Division Polygon Data — load_cn_county","title":"Loading Chinese County-Level Administrative Division Polygon Data — load_cn_county","text":"Loading Chinese County-Level Administrative Division Polygon Data","code":""},{"path":"https://stscl.github.io/geocn/reference/load_cn_county.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Loading Chinese County-Level Administrative Division Polygon Data — load_cn_county","text":"","code":"load_cn_county(simplify = TRUE, keep = 0.05, keep_shape = TRUE, ...)"},{"path":"https://stscl.github.io/geocn/reference/load_cn_county.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Loading Chinese County-Level Administrative Division Polygon Data — load_cn_county","text":"simplify (optional) Whether simplify loading sf objects (default TRUE) keep (optional) Proportion points retain (0-1; default 0.05) keep_shape (optional)    Prevent small polygon features disappearing high simplification (default TRUE) ... (optional) arguments passed rmapshaper::ms_simplify()","code":""},{"path":"https://stscl.github.io/geocn/reference/load_cn_county.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Loading Chinese County-Level Administrative Division Polygon Data — load_cn_county","text":"Whether simplify loading sf objects","code":""},{"path":"https://stscl.github.io/geocn/reference/load_cn_county.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Loading Chinese County-Level Administrative Division Polygon Data — load_cn_county","text":"","code":"library(sf) county = load_cn_county() county #> Simple feature collection with 2877 features and 9 fields #> Geometry type: MULTIPOLYGON #> Dimension:     XY #> Bounding box:  xmin: 73.50655 ymin: 3.83703 xmax: 135.0945 ymax: 53.56362 #> Geodetic CRS:  WGS 84 #> # A tibble: 2,877 × 10 #>    省     省代码 市类型 省类型 市     市代码 县     县代码 县类型 #>    <chr>   <dbl> <chr>  <chr>  <chr>   <dbl> <chr>   <dbl> <chr>  #>  1 安徽省 340000 地级市 省     安庆市 340800 大观区 340803 市辖区 #>  2 安徽省 340000 地级市 省     安庆市 340800 怀宁县 340822 县     #>  3 安徽省 340000 地级市 省     安庆市 340800 潜山市 340882 县级市 #>  4 安徽省 340000 地级市 省     安庆市 340800 宿松县 340826 县     #>  5 安徽省 340000 地级市 省     安庆市 340800 太湖县 340825 县     #>  6 安徽省 340000 地级市 省     安庆市 340800 桐城市 340881 县级市 #>  7 安徽省 340000 地级市 省     安庆市 340800 望江县 340827 县     #>  8 安徽省 340000 地级市 省     安庆市 340800 宜秀区 340811 市辖区 #>  9 安徽省 340000 地级市 省     安庆市 340800 迎江区 340802 市辖区 #> 10 安徽省 340000 地级市 省     安庆市 340800 岳西县 340828 县     #> # ℹ 2,867 more rows #> # ℹ 1 more variable: geometry <MULTIPOLYGON [°]>"},{"path":"https://stscl.github.io/geocn/reference/load_cn_landborder.html","id":null,"dir":"Reference","previous_headings":"","what":"Loading China's Land Border — load_cn_landborder","title":"Loading China's Land Border — load_cn_landborder","text":"Loading China's Land Border","code":""},{"path":"https://stscl.github.io/geocn/reference/load_cn_landborder.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Loading China's Land Border — load_cn_landborder","text":"","code":"load_cn_landborder()"},{"path":"https://stscl.github.io/geocn/reference/load_cn_landborder.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Loading China's Land Border — load_cn_landborder","text":"sf object","code":""},{"path":"https://stscl.github.io/geocn/reference/load_cn_landborder.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Loading China's Land Border — load_cn_landborder","text":"","code":"cn_landborder = load_cn_landborder() cn_landborder #> Simple feature collection with 1 feature and 0 fields #> Geometry type: MULTILINESTRING #> Dimension:     XY #> Bounding box:  xmin: 73.53085 ymin: 21.15455 xmax: 134.981 ymax: 53.51356 #> Geodetic CRS:  WGS 84 #> # A tibble: 1 × 1 #>                                                                         geometry #>                                                            <MULTILINESTRING [°]> #> 1 ((124.3688 40.14596, 124.4699 40.19918, 124.5453 40.2525, 124.6446 40.30446, …"},{"path":"https://stscl.github.io/geocn/reference/load_cn_landcoast.html","id":null,"dir":"Reference","previous_headings":"","what":"Loading China's Land Border and Coastline — load_cn_landcoast","title":"Loading China's Land Border and Coastline — load_cn_landcoast","text":"Loading China's Land Border Coastline","code":""},{"path":"https://stscl.github.io/geocn/reference/load_cn_landcoast.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Loading China's Land Border and Coastline — load_cn_landcoast","text":"","code":"load_cn_landcoast()"},{"path":"https://stscl.github.io/geocn/reference/load_cn_landcoast.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Loading China's Land Border and Coastline — load_cn_landcoast","text":"sf object","code":""},{"path":"https://stscl.github.io/geocn/reference/load_cn_landcoast.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Loading China's Land Border and Coastline — load_cn_landcoast","text":"","code":"cn_landcoast = load_cn_landcoast() cn_landcoast #> Simple feature collection with 1 feature and 0 fields #> Geometry type: MULTILINESTRING #> Dimension:     XY #> Bounding box:  xmin: 73.53085 ymin: 18.12558 xmax: 134.981 ymax: 53.51356 #> Geodetic CRS:  WGS 84 #> # A tibble: 1 × 1 #>                                                                         geometry #>                                                            <MULTILINESTRING [°]> #> 1 ((124.3688 40.14596, 124.4699 40.19918, 124.5453 40.2525, 124.6446 40.30446, …"},{"path":"https://stscl.github.io/geocn/reference/load_cn_province.html","id":null,"dir":"Reference","previous_headings":"","what":"Loading Chinese Province-Level Administrative Divisional Polygon Data — load_cn_province","title":"Loading Chinese Province-Level Administrative Divisional Polygon Data — load_cn_province","text":"Loading Chinese Province-Level Administrative Divisional Polygon Data","code":""},{"path":"https://stscl.github.io/geocn/reference/load_cn_province.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Loading Chinese Province-Level Administrative Divisional Polygon Data — load_cn_province","text":"","code":"load_cn_province(simplify = TRUE, keep = 0.05, keep_shape = TRUE, ...)"},{"path":"https://stscl.github.io/geocn/reference/load_cn_province.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Loading Chinese Province-Level Administrative Divisional Polygon Data — load_cn_province","text":"simplify (optional) Whether simplify loading sf objects (default TRUE) keep (optional) Proportion points retain (0-1; default 0.05) keep_shape (optional)    Prevent small polygon features disappearing high simplification (default TRUE) ... (optional) arguments passed rmapshaper::ms_simplify()","code":""},{"path":"https://stscl.github.io/geocn/reference/load_cn_province.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Loading Chinese Province-Level Administrative Divisional Polygon Data — load_cn_province","text":"Whether simplify loading sf objects","code":""},{"path":"https://stscl.github.io/geocn/reference/load_cn_province.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Loading Chinese Province-Level Administrative Divisional Polygon Data — load_cn_province","text":"","code":"library(sf) province = load_cn_province() province #> Simple feature collection with 34 features and 3 fields #> Geometry type: MULTIPOLYGON #> Dimension:     XY #> Bounding box:  xmin: 73.50655 ymin: 3.83703 xmax: 135.0945 ymax: 53.56362 #> Geodetic CRS:  WGS 84 #> # A tibble: 34 × 4 #>    省             省代码 省类型                                         geometry #>    <chr>           <dbl> <chr>                                <MULTIPOLYGON [°]> #>  1 安徽省         340000 省         (((119.6189 31.13254, 119.5949 31.11146, 11… #>  2 澳门特别行政区 820000 特别行政区 (((113.5538 22.21535, 113.5357 22.20232, 11… #>  3 北京市         110000 直辖市     (((117.3833 40.22652, 117.3455 40.228, 117.… #>  4 福建省         350000 省         (((118.2515 24.45437, 118.2291 24.44861, 11… #>  5 甘肃省         620000 省         (((97.17197 42.79343, 97.07261 42.77249, 96… #>  6 广东省         440000 省         (((110.5657 20.33342, 110.5895 20.36326, 11… #>  7 广西壮族自治区 450000 自治区     (((109.1361 21.03521, 109.1408 21.06023, 10… #>  8 贵州省         520000 省         (((109.5841 26.75517, 109.5573 26.75496, 10… #>  9 海南省         460000 省         (((112.0522 3.838239, 112.0614 3.857381, 11… #> 10 河北省         130000 省         (((118.6478 39.05611, 118.634 39.07486, 118… #> # ℹ 24 more rows"},{"path":"https://stscl.github.io/geocn/reference/load_cn_tenline.html","id":null,"dir":"Reference","previous_headings":"","what":"Loading the 10-dash line of the South China Sea — load_cn_tenline","title":"Loading the 10-dash line of the South China Sea — load_cn_tenline","text":"Loading 10-dash line South China Sea","code":""},{"path":"https://stscl.github.io/geocn/reference/load_cn_tenline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Loading the 10-dash line of the South China Sea — load_cn_tenline","text":"","code":"load_cn_tenline()"},{"path":"https://stscl.github.io/geocn/reference/load_cn_tenline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Loading the 10-dash line of the South China Sea — load_cn_tenline","text":"sf object","code":""},{"path":"https://stscl.github.io/geocn/reference/load_cn_tenline.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Loading the 10-dash line of the South China Sea — load_cn_tenline","text":"","code":"cn_tenline = load_cn_tenline() cn_tenline #> Simple feature collection with 1 feature and 0 fields #> Geometry type: MULTILINESTRING #> Dimension:     XY #> Bounding box:  xmin: 108.2035 ymin: 3.40848 xmax: 122.8166 ymax: 24.6582 #> Geodetic CRS:  WGS 84 #> # A tibble: 1 × 1 #>                                                                         geometry #>                                                            <MULTILINESTRING [°]> #> 1 ((110.3232 12.2405, 110.3159 11.96466, 110.2778 11.71434, 110.2279 11.55393, …"},{"path":"https://stscl.github.io/geocn/reference/load_loess_plateau.html","id":null,"dir":"Reference","previous_headings":"","what":"Loading the Boundary Polygon Data of Loess Plateau — load_loess_plateau","title":"Loading the Boundary Polygon Data of Loess Plateau — load_loess_plateau","text":"Loading Boundary Polygon Data Loess Plateau","code":""},{"path":"https://stscl.github.io/geocn/reference/load_loess_plateau.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Loading the Boundary Polygon Data of Loess Plateau — load_loess_plateau","text":"","code":"load_loess_plateau()"},{"path":"https://stscl.github.io/geocn/reference/load_loess_plateau.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Loading the Boundary Polygon Data of Loess Plateau — load_loess_plateau","text":"sf object","code":""},{"path":"https://stscl.github.io/geocn/reference/load_loess_plateau.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Loading the Boundary Polygon Data of Loess Plateau — load_loess_plateau","text":"","code":"load_loess_plateau() #> Simple feature collection with 1 feature and 1 field #> Geometry type: POLYGON #> Dimension:     XY #> Bounding box:  xmin: 100.8425 ymin: 33.69722 xmax: 114.5019 ymax: 41.25155 #> Geodetic CRS:  WGS 84 #> # A tibble: 1 × 2 #>   name                                                                  geometry #>   <chr>                                                            <POLYGON [°]> #> 1 黄土高原 ((112.1615 40.824, 112.153 40.79219, 112.1241 40.77452, 112.0995 40.…"},{"path":"https://stscl.github.io/geocn/reference/load_tibetan_plateau.html","id":null,"dir":"Reference","previous_headings":"","what":"Loading the Boundary Polygon Data of Tibetan Plateau — load_tibetan_plateau","title":"Loading the Boundary Polygon Data of Tibetan Plateau — load_tibetan_plateau","text":"Loading Boundary Polygon Data Tibetan Plateau","code":""},{"path":"https://stscl.github.io/geocn/reference/load_tibetan_plateau.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Loading the Boundary Polygon Data of Tibetan Plateau — load_tibetan_plateau","text":"","code":"load_tibetan_plateau()"},{"path":"https://stscl.github.io/geocn/reference/load_tibetan_plateau.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Loading the Boundary Polygon Data of Tibetan Plateau — load_tibetan_plateau","text":"sf object","code":""},{"path":"https://stscl.github.io/geocn/reference/load_tibetan_plateau.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Loading the Boundary Polygon Data of Tibetan Plateau — load_tibetan_plateau","text":"","code":"load_tibetan_plateau() #> Simple feature collection with 1 feature and 0 fields #> Geometry type: POLYGON #> Dimension:     XY #> Bounding box:  xmin: 73.45169 ymin: 25.95491 xmax: 104.6424 ymax: 39.91312 #> Geodetic CRS:  WGS 84 #> # A tibble: 1 × 1 #>                                                                         geometry #>                                                                    <POLYGON [°]> #> 1 ((76.22701 38.39657, 76.18308 38.39721, 76.22862 38.39506, 76.22701 38.39657,…"},{"path":"https://stscl.github.io/geocn/reference/load_weihe_basin.html","id":null,"dir":"Reference","previous_headings":"","what":"Loading the Boundary Polygon Data of Weihe River Basin — load_weihe_basin","title":"Loading the Boundary Polygon Data of Weihe River Basin — load_weihe_basin","text":"Loading Boundary Polygon Data Weihe River Basin","code":""},{"path":"https://stscl.github.io/geocn/reference/load_weihe_basin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Loading the Boundary Polygon Data of Weihe River Basin — load_weihe_basin","text":"","code":"load_weihe_basin()"},{"path":"https://stscl.github.io/geocn/reference/load_weihe_basin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Loading the Boundary Polygon Data of Weihe River Basin — load_weihe_basin","text":"sf object","code":""},{"path":"https://stscl.github.io/geocn/reference/load_weihe_basin.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Loading the Boundary Polygon Data of Weihe River Basin — load_weihe_basin","text":"","code":"load_weihe_basin() #> Simple feature collection with 1 feature and 2 fields #> Geometry type: POLYGON #> Dimension:     XY #> Bounding box:  xmin: 103.9716 ymin: 33.69625 xmax: 110.2744 ymax: 37.40821 #> Geodetic CRS:  WGS 84 #> # A tibble: 1 × 3 #>   NameCN   NameEN                                                       geometry #>   <chr>    <chr>                                                   <POLYGON [°]> #> 1 渭河流域 Weihe River Basin ((107.2046 37.4082, 107.2047 37.40818, 107.2048 37…"},{"path":"https://stscl.github.io/geocn/reference/load_world_coastline.html","id":null,"dir":"Reference","previous_headings":"","what":"Loading Global Coastlines — load_world_coastline","title":"Loading Global Coastlines — load_world_coastline","text":"Loading Global Coastlines","code":""},{"path":"https://stscl.github.io/geocn/reference/load_world_coastline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Loading Global Coastlines — load_world_coastline","text":"","code":"load_world_coastline()"},{"path":"https://stscl.github.io/geocn/reference/load_world_coastline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Loading Global Coastlines — load_world_coastline","text":"sf object","code":""},{"path":"https://stscl.github.io/geocn/reference/load_world_coastline.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Loading Global Coastlines — load_world_coastline","text":"","code":"load_world_coastline() #> Simple feature collection with 1428 features and 0 fields #> Geometry type: MULTILINESTRING #> Dimension:     XY #> Bounding box:  xmin: -180 ymin: -85.19219 xmax: 180 ymax: 83.59961 #> Geodetic CRS:  WGS 84 #> # A tibble: 1,428 × 1 #>                                                                         geometry #>                                                            <MULTILINESTRING [°]> #>  1 ((180 -16.15293, 179.8481 -16.21426, 179.7889 -16.22148, 179.715 -16.20762, … #>  2 ((177.2575 -17.0542, 177.2874 -17.04863, 177.2758 -17.10488, 177.2342 -17.14… #>  3 ((127.3727 0.7913086, 127.3538 0.8474609, 127.3198 0.8620117, 127.2928 0.842… #>  4 ((-81.32231 24.68506, -81.42007 24.75, -81.42168 24.73262, -81.37905 24.6662… #>  5 ((-80.79941 24.84629, -80.83887 24.81787, -80.84834 24.80366, -80.82939 24.8… #>  6 ((-80.62568 24.94111, -80.66514 24.89844, -80.63828 24.90317, -80.6146 24.93… #>  7 ((129.5688 -31.62725, 129.1877 -31.65996, 128.9462 -31.70264, 128.5461 -31.8… #>  8 ((178.5749 -17.74932, 178.5957 -17.69902, 178.5916 -17.65146, 178.5232 -17.5… #>  9 ((166.9424 -22.09014, 166.8201 -22.01699, 166.6896 -21.95303, 166.5875 -21.8… #> 10 ((127.6874 -0.07993164, 127.6813 0.03486328, 127.6854 0.1490234, 127.7087 0.… #> # ℹ 1,418 more rows"},{"path":"https://stscl.github.io/geocn/reference/load_world_continent.html","id":null,"dir":"Reference","previous_headings":"","what":"Loading Global Continents — load_world_continent","title":"Loading Global Continents — load_world_continent","text":"Loading Global Continents","code":""},{"path":"https://stscl.github.io/geocn/reference/load_world_continent.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Loading Global Continents — load_world_continent","text":"","code":"load_world_continent()"},{"path":"https://stscl.github.io/geocn/reference/load_world_continent.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Loading Global Continents — load_world_continent","text":"sf object","code":""},{"path":"https://stscl.github.io/geocn/reference/load_world_continent.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Loading Global Continents — load_world_continent","text":"","code":"load_world_continent() #> Simple feature collection with 8 features and 1 field #> Geometry type: MULTIPOLYGON #> Dimension:     XY #> Bounding box:  xmin: -180 ymin: -90 xmax: 180 ymax: 83.6236 #> Geodetic CRS:  WGS 84 #> # A tibble: 8 × 2 #>   CONTINENT                                                             geometry #>   <chr>                                                       <MULTIPOLYGON [°]> #> 1 Asia          (((93.27554 80.26361, 93.31304 80.27415, 93.27249 80.30193, 93.… #> 2 North America (((-25.28167 71.39166, -25.32889 71.41165, -25.44833 71.45139, … #> 3 Europe        (((58.06138 81.68776, 57.98055 81.68858, 57.93971 81.6922, 57.9… #> 4 Africa        (((0.694651 5.773365, 0.6666666 5.803194, 0.6505165 5.837184, 0… #> 5 South America (((-81.71306 12.49028, -81.72014 12.49632, -81.72015 12.54528, … #> 6 Oceania       (((-177.3933 28.18416, -177.3958 28.18749, -177.388 28.21458, -… #> 7 Australia     (((142.28 -10.26556, 142.2105 -10.2368, 142.2014 -10.22556, 142… #> 8 Antarctica    (((51.80305 -46.45667, 51.72139 -46.45278, 51.71055 -46.44667, …"},{"path":"https://stscl.github.io/geocn/reference/load_world_country.html","id":null,"dir":"Reference","previous_headings":"","what":"Load Global Country Boundaries — load_world_country","title":"Load Global Country Boundaries — load_world_country","text":"Load Global Country Boundaries","code":""},{"path":"https://stscl.github.io/geocn/reference/load_world_country.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load Global Country Boundaries — load_world_country","text":"","code":"load_world_country(center = \"west\")"},{"path":"https://stscl.github.io/geocn/reference/load_world_country.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load Global Country Boundaries — load_world_country","text":"center (optional) Center must west east. Default west.","code":""},{"path":"https://stscl.github.io/geocn/reference/load_world_country.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load Global Country Boundaries — load_world_country","text":"sf object","code":""},{"path":"https://stscl.github.io/geocn/reference/load_world_country.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Load Global Country Boundaries — load_world_country","text":"center parameter set west, map center Atlantic Ocean; center east, map center Pacific Ocean.","code":""},{"path":"https://stscl.github.io/geocn/reference/load_world_country.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load Global Country Boundaries — load_world_country","text":"","code":"load_world_country() #> Simple feature collection with 249 features and 39 fields #> Geometry type: MULTIPOLYGON #> Dimension:     XY #> Bounding box:  xmin: -180 ymin: -90 xmax: 180 ymax: 83.6341 #> Geodetic CRS:  WGS 84 #> # A tibble: 249 × 40 #>    country1     country2 capital1 capital2 scalerank labelrank sovereignt sov_a3 #>    <chr>        <chr>    <chr>    <chr>        <int>     <dbl> <chr>      <chr>  #>  1 阿鲁巴       Aruba    奥拉涅…  Oranjes…         3         5 Netherlan… NL1    #>  2 阿富汗       Afghani… 喀布尔   Kabul            0         3 Afghanist… AFG    #>  3 安哥拉       Angola   罗安达   Luanda           0         3 Angola     AGO    #>  4 安圭拉       Anguilla 瓦利     The Val…         3         6 United Ki… GB1    #>  5 阿尔巴尼亚   Albania  地拉那   Tirana           0         6 Albania    ALB    #>  6 奥兰群岛     Aland I… 玛丽港   Marieha…         3         6 Finland    FI1    #>  7 安道尔共和国 Andorra  安道尔   Andorra…         0         6 Andorra    AND    #>  8 阿拉伯联合…  United … 阿布扎比 Abu Dha…         0         4 United Ar… ARE    #>  9 阿根廷       Argenti… 布宜诺…  BuenosA…         0         2 Argentina  ARG    #> 10 亚美尼亚     Armenia  埃里温   Yerevan          0         6 Armenia    ARM    #> # ℹ 239 more rows #> # ℹ 32 more variables: type <chr>, name <chr>, name_long <chr>, abbrev <chr>, #> #   postal <chr>, formal_en <chr>, formal_fr <chr>, note_adm0 <chr>, #> #   note_brk <chr>, name_sort <chr>, name_alt <chr>, mapcolor7 <dbl>, #> #   mapcolor8 <dbl>, mapcolor9 <dbl>, mapcolor13 <dbl>, pop_est <dbl>, #> #   gdp_md_est <dbl>, pop_year <dbl>, lastcensus <dbl>, gdp_year <dbl>, #> #   economy <chr>, income_grp <chr>, iso_a2 <chr>, iso_n3 <chr>, un_a3 <chr>, …"},{"path":"https://stscl.github.io/geocn/reference/load_world_lake.html","id":null,"dir":"Reference","previous_headings":"","what":"Loading Global Lakes — load_world_lake","title":"Loading Global Lakes — load_world_lake","text":"Loading Global Lakes","code":""},{"path":"https://stscl.github.io/geocn/reference/load_world_lake.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Loading Global Lakes — load_world_lake","text":"","code":"load_world_lake()"},{"path":"https://stscl.github.io/geocn/reference/load_world_lake.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Loading Global Lakes — load_world_lake","text":"sf object","code":""},{"path":"https://stscl.github.io/geocn/reference/load_world_lake.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Loading Global Lakes — load_world_lake","text":"","code":"load_world_lake() #> Simple feature collection with 412 features and 2 fields #> Geometry type: MULTIPOLYGON #> Dimension:     XY #> Bounding box:  xmin: -165.8985 ymin: -50.62002 xmax: 176.0827 ymax: 81.94033 #> Geodetic CRS:  WGS 84 #> # A tibble: 412 × 3 #>    scalerank name                                                       geometry #>        <dbl> <chr>                                            <MULTIPOLYGON [°]> #>  1         0 Mälaren          (((17.97979 59.32905, 17.87617 59.2708, 17.57051 … #>  2         0 Lake Ladoga      (((29.83672 61.22607, 29.83672 61.22607, 29.83672… #>  3         0 Lake Albert      (((31.47158 2.385449, 31.39551 2.28042, 31.38398 … #>  4         0 Lake Erie        (((-83.10483 42.28643, -83.07646 42.27549, -83.10… #>  5         0 Lake Chad        (((14.74229 13.07803, 14.74277 13.06235, 14.71602… #>  6         0 Lake Malawi      (((35.26016 -14.27744, 35.26016 -14.27744, 35.260… #>  7         0 Lake Victoria    (((34.71758 -0.09169922, 34.71758 -0.09169922, 34… #>  8         0 Lake Baikal      (((109.8639 55.53896, 109.8639 55.53896, 109.8639… #>  9         0 Lake Winnipeg    (((-96.37256 50.72925, -96.37256 50.72925, -96.35… #> 10         0 Great Slave Lake (((-109.0221 62.80669, -109.0221 62.80669, -109.0… #> # ℹ 402 more rows"},{"path":"https://stscl.github.io/geocn/reference/load_world_ocean.html","id":null,"dir":"Reference","previous_headings":"","what":"Loading Global Oceans — load_world_ocean","title":"Loading Global Oceans — load_world_ocean","text":"Loading Global Oceans","code":""},{"path":"https://stscl.github.io/geocn/reference/load_world_ocean.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Loading Global Oceans — load_world_ocean","text":"","code":"load_world_ocean()"},{"path":"https://stscl.github.io/geocn/reference/load_world_ocean.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Loading Global Oceans — load_world_ocean","text":"sf object","code":""},{"path":"https://stscl.github.io/geocn/reference/load_world_ocean.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Loading Global Oceans — load_world_ocean","text":"","code":"load_world_ocean() #> Simple feature collection with 1 feature and 0 fields #> Geometry type: MULTIPOLYGON #> Dimension:     XY #> Bounding box:  xmin: -180 ymin: -85.19219 xmax: 180 ymax: 90 #> Geodetic CRS:  WGS 84 #> # A tibble: 1 × 1 #>                                                                         geometry #>                                                               <MULTIPOLYGON [°]> #> 1 (((51.74453 46.93374, 51.94512 46.89487, 52.01113 46.9019, 52.08555 46.8396, …"},{"path":"https://stscl.github.io/geocn/reference/load_world_river.html","id":null,"dir":"Reference","previous_headings":"","what":"Loading Global Rivers — load_world_river","title":"Loading Global Rivers — load_world_river","text":"Loading Global Rivers","code":""},{"path":"https://stscl.github.io/geocn/reference/load_world_river.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Loading Global Rivers — load_world_river","text":"","code":"load_world_river()"},{"path":"https://stscl.github.io/geocn/reference/load_world_river.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Loading Global Rivers — load_world_river","text":"sf object","code":""},{"path":"https://stscl.github.io/geocn/reference/load_world_river.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Loading Global Rivers — load_world_river","text":"","code":"load_world_river() #> Simple feature collection with 1616 features and 4 fields #> Geometry type: MULTILINESTRING #> Dimension:     XY #> Bounding box:  xmin: -165.2439 ymin: -50.24014 xmax: 176.3258 ymax: 73.3349 #> Geodetic CRS:  WGS 84 #> # A tibble: 1,616 × 5 #>    name        type            scalerank strokelwd                      geometry #>    <chr>       <chr>               <int>     <dbl>         <MULTILINESTRING [°]> #>  1 NA          River                   5       2   ((-72.99133 46.17744, -73.07… #>  2 Ebro        River                   5       1.5 ((-4.18886 43.01117, -4.1022… #>  3 Ebro        River                   5       2   ((-1.747614 42.23592, -1.994… #>  4 Ebro        River                   5       2.5 ((-1.747614 42.23592, -1.405… #>  5 Ebro        River                   5       3   ((0.3950202 41.2543, 0.52542… #>  6 Mississippi Lake Centerline         5       2   ((-94.50681 47.45641, -94.63… #>  7 Mississippi Lake Centerline         5       2.5 ((-94.32648 47.40563, -94.20… #>  8 Mississippi River                   5       1.5 ((-95.02582 47.15611, -94.96… #>  9 Mississippi River                   5       2   ((-94.9681 47.3175, -94.8770… #> 10 Mississippi River                   5       2   ((-94.50774 47.45654, -94.32… #> # ℹ 1,606 more rows"},{"path":"https://stscl.github.io/geocn/reference/load_yangtze_basin.html","id":null,"dir":"Reference","previous_headings":"","what":"Loading the Boundary Polygon Data of Yangtze River Basin — load_yangtze_basin","title":"Loading the Boundary Polygon Data of Yangtze River Basin — load_yangtze_basin","text":"Loading Boundary Polygon Data Yangtze River Basin","code":""},{"path":"https://stscl.github.io/geocn/reference/load_yangtze_basin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Loading the Boundary Polygon Data of Yangtze River Basin — load_yangtze_basin","text":"","code":"load_yangtze_basin()"},{"path":"https://stscl.github.io/geocn/reference/load_yangtze_basin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Loading the Boundary Polygon Data of Yangtze River Basin — load_yangtze_basin","text":"sf object","code":""},{"path":"https://stscl.github.io/geocn/reference/load_yangtze_basin.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Loading the Boundary Polygon Data of Yangtze River Basin — load_yangtze_basin","text":"","code":"load_yangtze_basin() #> Simple feature collection with 1 feature and 0 fields #> Geometry type: POLYGON #> Dimension:     XY #> Bounding box:  xmin: 90.53567 ymin: 24.46143 xmax: 121.9026 ymax: 35.7528 #> Geodetic CRS:  WGS 84 #> # A tibble: 1 × 1 #>                                                                         geometry #>                                                                    <POLYGON [°]> #> 1 ((93.84055 35.71126, 93.8472 35.70832, 93.8516 35.70841, 93.85953 35.70855, 9…"},{"path":"https://stscl.github.io/geocn/reference/load_yellow_river_basin.html","id":null,"dir":"Reference","previous_headings":"","what":"Loading the Boundary Polygon Data of Yellow River Basin — load_yellow_river_basin","title":"Loading the Boundary Polygon Data of Yellow River Basin — load_yellow_river_basin","text":"Loading Boundary Polygon Data Yellow River Basin","code":""},{"path":"https://stscl.github.io/geocn/reference/load_yellow_river_basin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Loading the Boundary Polygon Data of Yellow River Basin — load_yellow_river_basin","text":"","code":"load_yellow_river_basin()"},{"path":"https://stscl.github.io/geocn/reference/load_yellow_river_basin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Loading the Boundary Polygon Data of Yellow River Basin — load_yellow_river_basin","text":"sf object","code":""},{"path":"https://stscl.github.io/geocn/reference/load_yellow_river_basin.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Loading the Boundary Polygon Data of Yellow River Basin — load_yellow_river_basin","text":"","code":"load_yellow_river_basin() #> Simple feature collection with 1 feature and 0 fields #> Geometry type: POLYGON #> Dimension:     XY #> Bounding box:  xmin: 95.8969 ymin: 32.15905 xmax: 119.0656 ymax: 41.83875 #> Geodetic CRS:  WGS 84 #> # A tibble: 1 × 1 #>                                                                         geometry #>                                                                    <POLYGON [°]> #> 1 ((118.9801 37.70119, 118.9801 37.70119, 118.9278 37.69736, 118.8866 37.68964,…"},{"path":"https://stscl.github.io/geocn/reference/st_transform_cn.html","id":null,"dir":"Reference","previous_headings":"","what":"Coordinate Conversion Between GCJ02,BD09 and WGS84 — st_transform_cn","title":"Coordinate Conversion Between GCJ02,BD09 and WGS84 — st_transform_cn","text":"Coordinate Conversion GCJ02,BD09 WGS84","code":""},{"path":"https://stscl.github.io/geocn/reference/st_transform_cn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coordinate Conversion Between GCJ02,BD09 and WGS84 — st_transform_cn","text":"","code":"st_transform_cn(lon, lat, from = \"gcj\", to = \"wgs\")"},{"path":"https://stscl.github.io/geocn/reference/st_transform_cn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coordinate Conversion Between GCJ02,BD09 and WGS84 — st_transform_cn","text":"lon Longitude vector. lat Latitude vector. (optional) Source CRS. Default gcj. (optional) Target CRS. Default wgs.","code":""},{"path":"https://stscl.github.io/geocn/reference/st_transform_cn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coordinate Conversion Between GCJ02,BD09 and WGS84 — st_transform_cn","text":"coordinate tibble target CRS.","code":""},{"path":"https://stscl.github.io/geocn/reference/st_transform_cn.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Coordinate Conversion Between GCJ02,BD09 and WGS84 — st_transform_cn","text":"wgs stands WGS84 coordinate system, gcj stands GCJ02 coordinate system, bd stands BD09 coordinate system.","code":""},{"path":"https://stscl.github.io/geocn/reference/st_transform_cn.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coordinate Conversion Between GCJ02,BD09 and WGS84 — st_transform_cn","text":"","code":"lon = c(126.626510,126.625261,126.626378,126.626541,126.626721,126.627732,126.626510) lat = c(45.731596,45.729834,45.729435,45.729676,45.729604,45.730915,45.731596) st_transform_cn(lon,lat) #> # A tibble: 7 × 2 #>     lon   lat #>   <dbl> <dbl> #> 1  127.  45.7 #> 2  127.  45.7 #> 3  127.  45.7 #> 4  127.  45.7 #> 5  127.  45.7 #> 6  127.  45.7 #> 7  127.  45.7"},{"path":"https://stscl.github.io/geocn/news/index.html","id":"geocn-010","dir":"Changelog","previous_headings":"","what":"geocn 0.1.0","title":"geocn 0.1.0","text":"First stable release.","code":""}]
